file(GLOB folder_source src/*.cpp)
file(GLOB folder_header include/*.hpp)

cmake_minimum_required(VERSION 2.8.3)
project(pedestrian_detector)

find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  std_msgs
  cv_bridge
  image_transport
)

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../binAndDataFiles)

catkin_package(
  INCLUDE_DIRS include
  LIBRARIES pedestrian_detector
  CATKIN_DEPENDS cv_bridge image_transport roscpp std_msgs
  DEPENDS system_lib
)

###########
## Build ##
###########
  SET(CMAKE_CXX_FLAGS_DEBUG   "${CMAKE_CXX_FLAGS_DEBUG} -Wall -std=c++11") #the -g option is implicit...
  SET(CMAKE_CXX_FLAGS_RELEASE "-g -Wall -O2 -finline-functions -fpredictive-commoning -fgcse-after-reload -ftree-slp-vectorize -ftree-loop-distribute-patterns -fipa-cp-clone -funswitch-loops -fvect-cost-model -ftree-partial-pre")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS_RELEASE}") #Default build mode is release mode

include_directories(include)
include_directories(${catkin_INCLUDE_DIRS}s)

source_group("Source Files" FILES ${folder_source})
source_group("Header Files" FILES ${folder_header})

add_executable(detector ${folder_header} ${folder_source})
target_link_libraries(detector ${catkin_LIBRARIES})

add_executable(viewer viewer/viewer.cpp)
target_link_libraries(viewer ${catkin_LIBRARIES})

##########################################
##Copy needed files to the bin directory##
##########################################

configure_file(src/configuration.xml
    ${CATKIN_DEVEL_PREFIX}/${CATKIN_PACKAGE_BIN_DESTINATION}/configuration.xml COPYONLY)

configure_file(src/StrongClassifierTreeStep4.txt
    ${CATKIN_DEVEL_PREFIX}/${CATKIN_PACKAGE_BIN_DESTINATION}/StrongClassifierTreeStep4.txt COPYONLY)

#This only is not used in ACF. I must clean to code... but for now let's copy it to avoid problems...
configure_file(src/rectangles.dat
    ${CATKIN_DEVEL_PREFIX}/${CATKIN_PACKAGE_BIN_DESTINATION}/rectangles.dat COPYONLY)

